{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"name":"Ivan Novikov","title":"Ivan Novikov","description":"NYC-based front-end software engineer","about":"I have worked as a solopreneur building front-end-heavy web apps from start to finish, and also as a freelance front-end engineer. I have extensive experience with TypeScript, React, RxJS, Next.js, GraphQL/Apollo and various browser APIs, but would love to try out new stuff such as Remix or Elm in my future missions. Don't hesitate to reach out: Twitter DMs are open, and my email is on my GitHub profile.","author":"@ivan7237d","github":"https://github.com/ivan7237d","linkedin":"https://www.linkedin.com/in/ivan-novikov-1881981b3/","articles":[{"name":"I've used the pipe() function 2,560 times and I can tell you it's good! / Mar 3, 2021 / Featured by JavaScript Weekly","description":"Reasons to use a utility function that lets you replace b(a(x)) with pipe(x, a, b).","link":"https://www.obvibase.com/dev-blog/i-ve-used-the-pipe-function-2-560-times-and-i-can-tell-you-it-s-good"},{"name":"Log and test RxJS observables with 1log / Feb 1, 2021","description":"Introduction to 1log library for RxJS users.","link":"https://www.obvibase.com/dev-blog/log-and-test-rxjs-observables-with-1log"},{"name":"How Obvibase uses Web Workers / Jun 30, 2020","description":"A build process that uses TS compiler and Webpack to offload some modules to a Web Worker.","link":"https://www.obvibase.com/dev-blog/how-obvibase-uses-web-workers"}],"projects":[{"name":"1log  / Log function with superpowers / 2020-2021","description":"This library provides a function log() that can be used as the regular console.log(), but has two superpowers: you can insert it into any expression, as in f(log(x)), and it supports plugins.","link":"https://github.com/ivan7237d/1log"},{"name":"Antiutils  / TS/JS utilities for those who don't like utilities / 2020-2021","description":"Based on \"only one way to do it\" principle, this library provides a utility only when something can't be easily and readably accomplished with vanilla JavaScript.","link":"https://github.com/ivan7237d/antiutils"}],"experience":[{"name":"McGraw Hill Education (via A.Team) / Front-end software engineer / May 2022 - present","description":"Helped build from the ground up an internal web app focused on data entry, implemented with Next.js and Apollo.","link":"https://www.mheducation.com/"},{"name":"Love Stories TV (via A.Team) / Front-end software engineer / May-December 2021","description":"Helped transition the website to Next.js, developed a framework for reporting UI interactions to analytics platforms, implemented new UI components and features with TypeScript, React and styled-components.","link":"https://lovestoriestv.com/"},{"name":"Obvibase / Founder / 2016 - 2021","description":"Worked as a full-time solopreneur on Obvibase. Obvibase is a PWA that lets you easily create online databases. It supports real-time data sync and offline editing, and uses web workers and windowed lists to achieve good performance for larger databases. The backend runs on Google App Engine (Python) and Google Cloud Datastore, the front end is implemented with Typescript, RxJS and React.","link":"https://www.obvibase.com"},{"name":"Egar Technology / Business analyst / 2004-2016","description":"Custom enhancements to the company's B2B software (from gathering initial requirements to deployment), institutional sales/support, negotiation/design/deployment of integrations with partner services.","link":"http://www.egartech.com/"}],"skills":[{"name":"Technologies","description":"JavaScript, TypeScript, RxJS, React, CSS/SCSS/CSS-in-JS, Next.js, GraphQL/Apollo, web/service workers, Indexed DB, Jest, Google App Engine & Cloud Datastore, Stripe API, Python."},{"name":"Languages","description":"English, Russian, French."}]}},"allMarkdownRemark":{"edges":[]}},"pageContext":{}},"staticQueryHashes":["63159454"]}